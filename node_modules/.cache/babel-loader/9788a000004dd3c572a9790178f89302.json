{"ast":null,"code":"import _slicedToArray from \"/Users/XxTARUNxX/Desktop/ReactExercise/hello-world/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/XxTARUNxX/Desktop/ReactExercise/hello-world/src/component/HCounter.js\";\nimport React from 'react';\n\nfunction HCounter({\n  initialCount\n}) {\n  const _useState = useState(initialCount),\n        _useState2 = _slicedToArray(_useState, 2),\n        count = _useState2[0],\n        setCount = _useState2[1];\n\n  return React.createElement(React.Fragment, null, \"Count: \", count, React.createElement(\"button\", {\n    onClick: () => setCount(initialCount),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Reset\"), React.createElement(\"button\", {\n    onClick: () => setCount(prevCount => prevCount + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"+\"), React.createElement(\"button\", {\n    onClick: () => setCount(prevCount => prevCount - 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"-\"));\n}\n\nexport default HCounter;","map":{"version":3,"sources":["/Users/XxTARUNxX/Desktop/ReactExercise/hello-world/src/component/HCounter.js"],"names":["React","HCounter","initialCount","useState","count","setCount","prevCount"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAAkC;AAAA,oBACJC,QAAQ,CAACD,YAAD,CADJ;AAAA;AAAA,QACvBE,KADuB;AAAA,QAChBC,QADgB;;AAE9B,SACE,qDACUD,KADV,EAEE;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACH,YAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE;AAAQ,IAAA,OAAO,EAAE,MAAMG,QAAQ,CAACC,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHF,EAIE;AAAQ,IAAA,OAAO,EAAE,MAAMD,QAAQ,CAACC,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJF,CADF;AAQD;;AAEH,eAAeL,QAAf","sourcesContent":["import React from 'react'\n\nfunction HCounter({initialCount}) {\n    const [count, setCount] = useState(initialCount);\n    return (\n      <>\n        Count: {count}\n        <button onClick={() => setCount(initialCount)}>Reset</button>\n        <button onClick={() => setCount(prevCount => prevCount + 1)}>+</button>\n        <button onClick={() => setCount(prevCount => prevCount - 1)}>-</button>\n      </>\n    );\n  }\n  \nexport default HCounter\n  "]},"metadata":{},"sourceType":"module"}